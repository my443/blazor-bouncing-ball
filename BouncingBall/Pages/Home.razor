@page "/"
@using System.Timers;
@using Toolbelt.Blazor.Gamepad
@inject GamepadList GamePadList

<PageTitle>Home</PageTitle>

<style>
    .fixed-div {
    width: @(canvas.Width)px; /* Set the desired width */
    height: @(canvas.Height)px; /* Set the desired height */
    position: fixed; /* Fix the position on the page */
    top: @(canvas.y)px; /* Adjust the top position */
    left: @(canvas.x)px; /* Adjust the left position */
    background-color: lightblue; /* Optional: Set a background color */
    border: 1px solid black; /* Optional: Set a border */
    }

    .circle {
    display: block;
    background: black;
    border-radius: 50%;
    height: 30px;
    width: 30px;
    position: absolute;
    }

    .red-rectangle {
    width: @(paddle.width)px;
    height: @(paddle.height)px;
    background-color: red;
    position: absolute;
    }

    .square {
    width: @(_squareSize)px; /* Set the desired width */
    height: @(_squareSize)px; /* Set the desired height */
    position: absolute; /* Optional: Set position */
    }
</style>


<div @ref="divElement" class="fixed-div" tabindex="0" @onkeydown="HandleKeyDown" @onkeyup="HandleKeyUp">
    @foreach (var block in _blocks) { 
        <figure class="square" style="margin-left:@(block.x)px; margin-top:@(block.y)px;background-color:@block.Colour"></figure>
    }

    <figure class="circle" style="margin-left:@(ball.x)px; margin-top:@(ball.y)px"></figure>
    <figure class="red-rectangle" style="margin-left:@(paddle.x)px; margin-top:@(_paddleY)px"></figure>
</div>

<button @onclick="TogglePause">
    @(_isPaused ? "Play Game" : "Pause")
</button>
<p>X-And-Width @(ball.x) / @(canvas.Width)</p>
<p>Y-And-Height @(ball.y) / @(canvas.Height)</p>
<p>Key Pressed: @(key)</p>
<p>Remaining Blocks: @(_blocks.Count)</p>

@if (this._gamepad != null)
{
    <p>Axes</p>
    <ul>
        @foreach (var ax in _gamepad.Axes)
        {
            <li>@ax.ToString() @ax.ToString("#,0.0")</li>
        }
    </ul>

    <p>Buttons</p>
    <ul>
        @foreach (var button in _gamepad.Buttons)
        {
            <li>@button.Pressed (@button.Value)</li>
        }
    </ul>
}


